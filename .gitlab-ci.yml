# helpful Links:
# https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
# https://www.youtube.com/watch?v=7I6tHw68DMQ

stages:
  - test

test:
  #image: $CI_REGISTRY_IMAGE:24032023
  image: rocker/r-ver:4.2.3
  stage: test
  tags:
    - docker
  variables:
    # RETICULATE_MINICONDA_PATH: "/root/.local/share/r-miniconda/"
    # RETICULATE_PYTHON_ENV: "/root/.local/share/r-miniconda/envs/r-reticulate/"
    RENV_CONFIG_EXTERNAL_LIBRARIES: "/usr/local/lib/R/library"
    RENV_PATHS_CACHE: "$CI_PROJECT_DIR/cache"
    RENV_PATHS_LIBRARY: "$CI_PROJECT_DIR/renv/library"
    RUN_PYTHON_CONFIG_TESTS: $RUN_PYTHON_CONFIG_TESTS
    R_LIBS: "/usr/local/lib/R/site-library:/usr/local/lib/R/library:$RENV_PATHS_LIBRARY"
  before_script:
    - apt-get update && apt-get upgrade -y
    - apt-get install -y git
    - |
      apt-get install -y build-essential libssl-dev zlib1g-dev libbz2-dev \
      libreadline-dev libsqlite3-dev curl libncursesw5-dev xz-utils tk-dev \
      libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
    - apt-get install -y python3.10-venv python3-pip
    - R -e "if (!requireNamespace('renv', quietly = TRUE)) install.packages('renv')"
    - R -e 'Sys.getenv("R_LIBS")'
    #- R -e 'renv::restore()'
    #- R -e 'renv::status()'
    - R -e 'renv::install("bioc::rhdf5")'
    - R -e 'renv::install()'
    
  script:
    - R CMD build . --no-manual --no-build-vignettes
    - R CMD check $(ls -1t *.tar.gz | head -n 1) --no-manual --no-build-vignettes
  after_script:
    - R -e 'covr::package_coverage(type = c("tests", "examples"), quiet = F)'
  coverage: '/Coverage: \d+\.\d+\%/'
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    untracked: true
    paths:
      - "$RENV_PATHS_CACHE"
      - "$RENV_PATHS_LIBRARY"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_COMMIT_BRANCH == "master"'